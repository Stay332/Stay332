#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
enum JumpType {
    T, S, Lo, F, Lz, A
};

static double scoreTable[4][6] = { {0.4, 0.4, 0.5, 0.5, 0.6, 1.1},
                                   {1.3, 1.3, 1.7, 1.8, 2.1, 3.3},
                                   {4.2, 4.3, 4.9, 5.3, 5.9, 8.0},
                                   {9.5, 9.7, 10.5, 11.0, 11.5, 12.5} };

double Score(int rotations, enum JumpType type){
    if (rotations < 1 || rotations > 4){
        return -1;
    }
    return scoreTable[rotations - 1][type];
}

int main(){
  	int i;
  	for(i = 0;i < 3;i++){
  	    int valid = 1;
  	    char once[100] = "",each;
  	    int index = 0;
  	    while(scanf("%c",&each) != EOF){
  	        if (each != '\n'){
  	            once[index++] = each;
  	        }
  	        if(each == '\n'){
  	            once[index] = '\0';
  	            break;
  	        }
  	    }
  	    
  	    int length = strlen(once),quan = 1,x1 = 0,k;
  	    double total = 0.00, all = 1.00;
  	    for ( k = 0;k < length; k++){
  	        if(once[k] == '+'){
  	            quan++;
  	        }
  	        if(once[k] == 'x')
  	            x1++;
  	    }
  	    if(quan > 1){
  	        all *= 1.1;
  	    }
  	    if( x1>1 || (x1 >= 1 && once[length-1] != 'x'))
  	        valid = 0;
  	    int ss = 0;
  	    for(int k = 0; k <quan;k++){
  	        
  	        char onetime[20]="";
  	        int d=0;
  	        while(ss < length){
  	            if(once[ss] != '+' && once[ss] != 'x')
  	                onetime[d++] = once[ss++];
  	            if(ss < length && (once[ss] == '+' || once[ss] == 'x')){
  	                onetime[d] == '\0';
  	                ss++;
  	                break;
  	            }
  	        }
  	        int length1 = strlen(onetime), a = 1,num;
  	        double points = 0.00, coe = 1.00;
  	        sscanf(onetime,"%d",&num);
  	        if(num > 4 || num < 1){
  	            valid = 0;
  	            break;
  	        }
  	        enum JumpType jump;
  	        
  	        if(onetime[a] == 'T'){
  	            jump = T;
  	            a++;
  	        }
  	        else if(onetime[a] == 'S'){
  	            jump = S;
  	            a++;
  	        }
  	        else if(onetime[a] == 'A'){
  	            jump = A;
  	            a++;
  	        }
  	        else if(onetime[a] == 'F'){
  	            jump = F;
  	            a++;
  	        }
  	        else if(onetime[a] == 'L'){
  	            a++;
  	            if(onetime[a] == 'o'){
  	                a++;
  	                jump = Lo;
  	            }
                if(onetime[a] == 'z'){
                    a++;
                    jump = Lz;
                }
                else{
                    valid = 0;
                    break;
                }
  	        }
  	        else{
  	            valid = 0;
  	            break;
  	        }
  	        
  	        if(a<length1){
  	            if(jump == Lz || jump == F){
  	                if(onetime[a] == 'e'){
  	                    coe *= 0.7;
  	                    a++;
  	                }
  	                if(onetime[a] == '!'){
  	                    a++;
  	                }
  	            }
  	        }
  	        int q = 0, anno = 0;
  	        for(a; a < length1;a++){
  	            if(onetime[a] == 'q')
  	                q++;
  	            if(onetime[a] == '<')
  	                anno++;
  	            else
  	                valid = 0;
  	        }
  	        if( q * anno != 0){
  	            valid = 0;
  	        }
  	        else if(anno == 1){
  	            coe *= 0.7;
  	        }
  	        else if(anno == 2){
  	            num--;
  	        }
  	        if(num != 0){
  	            points = Score(num,jump);
  	        }
  	        total += points * coe;
  	        }
  	    printf("%.2lf\n", total*all*valid);
  	}
    return 0;
}
